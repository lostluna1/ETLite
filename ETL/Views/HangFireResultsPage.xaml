<Page
    x:Class="ETL.Views.HangFireResultsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:ETL.Behaviors"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:l="using:WinUI3Localizer"
    xmlns:local="using:ETL.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:ETL.Core.Models"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:table="using:WinUI.TableView"
    xmlns:views="using:ETL.Views"
    d:DataContext="{d:DesignInstance Type=local:HangFireResultsPage,
                                     IsDesignTimeCreatable=True}"
    mc:Ignorable="d">
    <Page.Resources>
        <!--  定义一个数据模板来展示 Args 列表中的每个项  -->
        <DataTemplate x:Key="ArgsTemplate">
            <StackPanel>
                <ItemsControl ItemsSource="{Binding}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </DataTemplate>
    </Page.Resources>
    <Grid x:Name="ContentArea">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="10" />
            <!--  行间距  -->
            <RowDefinition Height="auto" />
            <RowDefinition Height="10" />
            <!--  行间距  -->
            <RowDefinition Height="auto" />
            <RowDefinition Height="10" />
            <!--  行间距  -->
            <RowDefinition Height="auto" />
            <RowDefinition Height="10" />
            <!--  行间距  -->
            <RowDefinition Height="auto" />
            <RowDefinition Height="10" />
            <!--  行间距  -->
            <RowDefinition Height="auto" />
            <RowDefinition Height="10" />
            <!--  行间距  -->
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <muxc:Expander
            Grid.Row="0"
            Grid.Column="0"
            Padding="0"
            HorizontalAlignment="Stretch"
            Expanding="{x:Bind Path=ViewModel.RefreshAllJobsItemsAsync}">
            <muxc:Expander.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        HorizontalAlignment="Left"
                        l:Uids.Uid="Expander_Header_AllTasks" />
                    <Button
                        Grid.Column="1"
                        HorizontalAlignment="Right"
                        Command="{x:Bind Path=ViewModel.RefreshAllJobsItemsCommand}">
                        <SymbolIcon Symbol="Refresh" />
                    </Button>
                </Grid>
            </muxc:Expander.Header>

            <muxc:Expander.Content>

                <table:TableView
                    x:Name="AllTasksTableView"
                    MaxHeight="400"
                    HorizontalContentAlignment="Left"
                    AutoGenerateColumns="False"
                    ItemsSource="{x:Bind Path=ViewModel.JobItems, Mode=OneWay}">
                    <table:TableView.Columns>
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskID" Binding="{Binding Id}" />
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskMethod" Binding="{Binding Name}" />
                        <table:TableViewTemplateColumn l:Uids.Uid="DataGrid_TaskArgs">
                            <table:TableViewTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ContentControl Content="{Binding Args}" ContentTemplate="{StaticResource ArgsTemplate}" />
                                </DataTemplate>
                            </table:TableViewTemplateColumn.CellTemplate>
                        </table:TableViewTemplateColumn>
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskLastExecution" Binding="{Binding LastExecution}" />
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskNextExecution" Binding="{Binding NextExecution}" />
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskLastJobState" Binding="{Binding LastJobState}" />
                    </table:TableView.Columns>
                </table:TableView>
            </muxc:Expander.Content>
        </muxc:Expander>

        <muxc:Expander
            Grid.Row="2"
            Grid.Column="0"
            Padding="0"
            HorizontalAlignment="Stretch"
            Expanding="{x:Bind Path=ViewModel.RefreshQueuedJobsItemsAsync}">
            <muxc:Expander.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        HorizontalAlignment="Left"
                        l:Uids.Uid="Expander_Header_QueuedTasks" />
                    <Button
                        Grid.Column="1"
                        HorizontalAlignment="Right"
                        Command="{x:Bind Path=ViewModel.RefreshQueuedJobsItemsCommand}">
                        <SymbolIcon Symbol="Refresh" />
                    </Button>
                </Grid>
            </muxc:Expander.Header>
            <muxc:Expander.Content>
                <table:TableView
                    x:Name="QueuedTasksTableView"
                    MaxHeight="400"
                    HorizontalContentAlignment="Left"
                    AutoGenerateColumns="False"
                    ItemsSource="{x:Bind Path=ViewModel.QueuedJobItems, Mode=OneWay}">
                    <table:TableView.Columns>
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskKey" Binding="{Binding Key}" />
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskMethod" Binding="{Binding Name}" />
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskEnqueuedAt" Binding="{Binding EnqueuedAt}" />
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskArgs" Binding="{Binding Arguments}" />
                    </table:TableView.Columns>
                </table:TableView>
            </muxc:Expander.Content>
        </muxc:Expander>

        <muxc:Expander
            Grid.Row="4"
            Grid.Column="0"
            Padding="0"
            HorizontalAlignment="Stretch"
            Expanding="{x:Bind Path=ViewModel.RefreshProcessingJobsItemsAsync}">
            <muxc:Expander.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        HorizontalAlignment="Left"
                        l:Uids.Uid="Expander_Header_RunningTasks" />
                    <Button
                        Grid.Column="1"
                        HorizontalAlignment="Right"
                        Command="{x:Bind Path=ViewModel.RefreshProcessingJobsItemsCommand}">
                        <SymbolIcon Symbol="Refresh" />
                    </Button>
                </Grid>
            </muxc:Expander.Header>
            <muxc:Expander.Content>
                <table:TableView
                    x:Name="ProcessingTasksTableView"
                    MaxHeight="400"
                    HorizontalContentAlignment="Left"
                    AutoGenerateColumns="False"
                    ItemsSource="{x:Bind Path=ViewModel.ProcessingJobItems, Mode=OneWay}">
                    <table:TableView.Columns>
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskKey" Binding="{Binding Key}" />
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskMethod" Binding="{Binding Name}" />
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskStartedAt" Binding="{Binding StartedAt}" />
                    </table:TableView.Columns>
                </table:TableView>
            </muxc:Expander.Content>
        </muxc:Expander>

        <muxc:Expander
            Grid.Row="6"
            Grid.Column="0"
            Padding="0"
            HorizontalAlignment="Stretch"
            Expanding="{x:Bind Path=ViewModel.RefreshSucceededJobsItemsAsync}">
            <muxc:Expander.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        HorizontalAlignment="Left"
                        l:Uids.Uid="Expander_Header_SuccessfulTasks" />
                    <Button
                        Grid.Column="1"
                        HorizontalAlignment="Right"
                        Command="{x:Bind Path=ViewModel.RefreshSucceededJobsItemsCommand}">
                        <SymbolIcon Symbol="Refresh" />
                    </Button>
                </Grid>
            </muxc:Expander.Header>
            <muxc:Expander.Content>
                <table:TableView
                    x:Name="SucceededTasksTableView"
                    MaxHeight="400"
                    HorizontalContentAlignment="Stretch"
                    AutoGenerateColumns="False"
                    ItemsSource="{x:Bind Path=ViewModel.SucceededJobItems, Mode=OneWay}">
                    <table:TableView.Columns>
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskKey" Binding="{Binding Key}" />
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskMethod" Binding="{Binding Name}" />
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskSucceededAt" Binding="{Binding SucceededAt}" />
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskTotalDuration" Binding="{Binding TotalDuration}" />
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskArgs" Binding="{Binding Arguments}" />
                    </table:TableView.Columns>
                </table:TableView>
            </muxc:Expander.Content>
        </muxc:Expander>


        <muxc:Expander
            Grid.Row="8"
            Grid.Column="0"
            Padding="0"
            HorizontalAlignment="Stretch"
            Expanding="{x:Bind Path=ViewModel.RefreshFailedJobsItemsAsync}">
            <muxc:Expander.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        HorizontalAlignment="Left"
                        l:Uids.Uid="Expander_Header_FailedTasks" />
                    <Button
                        Grid.Column="1"
                        HorizontalAlignment="Right"
                        Command="{x:Bind Path=ViewModel.RefreshFailedJobsItemsCommand}">
                        <SymbolIcon Symbol="Refresh" />
                    </Button>
                </Grid>
            </muxc:Expander.Header>
            <muxc:Expander.Content>
                <table:TableView
                    x:Name="FailedTasksTableView"
                    MaxHeight="400"
                    HorizontalContentAlignment="Left"
                    AutoGenerateColumns="False"
                    ItemsSource="{x:Bind Path=ViewModel.FailedJobItems, Mode=OneWay}">
                    <table:TableView.Columns>
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskKey" Binding="{Binding Key}" />
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskMethod" Binding="{Binding Name}" />
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskFailedAt" Binding="{Binding FailedAt}" />
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskExceptionMessage" Binding="{Binding ExceptionMessage}" />
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskArgs" Binding="{Binding Arguments}" />
                    </table:TableView.Columns>
                </table:TableView>
            </muxc:Expander.Content>
        </muxc:Expander>

        <muxc:Expander
            Grid.Row="10"
            Grid.Column="0"
            Padding="0"
            HorizontalAlignment="Stretch"
            Expanding="{x:Bind Path=ViewModel.RefreshDeletedJobsItemsAsync}">
            <muxc:Expander.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        HorizontalAlignment="Left"
                        l:Uids.Uid="Expander_Header_DeletedTasks" />
                    <Button
                        Grid.Column="1"
                        HorizontalAlignment="Right"
                        Command="{x:Bind Path=ViewModel.RefreshDeletedJobsItemsCommand}">
                        <SymbolIcon Symbol="Refresh" />
                    </Button>
                </Grid>
            </muxc:Expander.Header>
            <muxc:Expander.Content>
                <table:TableView
                    x:Name="DeletedTasksTableView"
                    MaxHeight="400"
                    HorizontalContentAlignment="Left"
                    AutoGenerateColumns="False"
                    ItemsSource="{x:Bind Path=ViewModel.DeletedJobItems, Mode=OneWay}">
                    <table:TableView.Columns>
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskKey" Binding="{Binding Key}" />
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskMethod" Binding="{Binding Name}" />
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskDeletedAt" Binding="{Binding DeletedAt}" />
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskArgs" Binding="{Binding Arguments}" />
                    </table:TableView.Columns>
                </table:TableView>
            </muxc:Expander.Content>
        </muxc:Expander>

        <muxc:Expander
            Grid.Row="12"
            Grid.Column="0"
            Padding="0"
            HorizontalAlignment="Stretch"
            Expanding="{x:Bind Path=ViewModel.RefreshScheduledJobsItemsAsync}">
            <muxc:Expander.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Column="0"
                        HorizontalAlignment="Left"
                        l:Uids.Uid="Expander_Header_WaitingTasks" />
                    <Button
                        Grid.Column="1"
                        HorizontalAlignment="Right"
                        Command="{x:Bind Path=ViewModel.RefreshSucceededJobsItemsCommand}">
                        <SymbolIcon Symbol="Refresh" />
                    </Button>
                </Grid>
            </muxc:Expander.Header>
            <muxc:Expander.Content>
                <table:TableView
                    x:Name="WaitingTasksTableView"
                    MaxHeight="400"
                    HorizontalContentAlignment="Left"
                    AutoGenerateColumns="False"
                    ItemsSource="{x:Bind Path=ViewModel.ScheduledJobItems, Mode=OneWay}">
                    <table:TableView.Columns>
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskKey" Binding="{Binding Key}" />
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskMethod" Binding="{Binding Name}" />
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskWaitingSince" Binding="{Binding WaitingSince}" />
                        <table:TableViewTextColumn l:Uids.Uid="DataGrid_TaskArgs" Binding="{Binding Arguments}" />
                    </table:TableView.Columns>
                </table:TableView>
            </muxc:Expander.Content>
        </muxc:Expander>

    </Grid>
</Page>
